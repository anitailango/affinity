{"version":3,"sources":["icons/icon-question.png","icons/logoface-affinity-grey.png","icons/coloredScale.png","components/CircleButton.js","components/TopBar.js","components/Header.js","components/Text.js","components/ArticleInfo.js","components/FloatingIndicator.js","components/Rating.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","circleStyle","width","height","padding","imgStyle","display","margin","maxHeight","maxWidth","CircleButton","props","className","style","href","src","icon","styles","logoStyles","TopBar","class","questionIcon","logo","alt","Header","this","text","React","Component","defaultProps","Text","whiteSpace","ArticleInfo","state","content","author","publisher","chrome","runtime","onMessage","addListener","message","sender","sendResponse","type","setState","textStyle","fontSize","textAlign","boxStyle","background","borderRadius","justifyContent","alignItems","triangleStyle","borderLeft","borderRight","borderTop","FloatingIndicator","Rating","coloredScale","minWidth","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.5773f2ec.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/icon-question.df60c05f.png\";","module.exports = __webpack_public_path__ + \"static/media/logoface-affinity-grey.7f9b856d.png\";","module.exports = __webpack_public_path__ + \"static/media/coloredScale.2b22049f.png\";","import React from 'react';\n\nfunction CircleButton(props) {\n\treturn (\n\t\t<div className=\"br-100 bg-white\" style={circleStyle}>\n\t\t\t<a href=\"#\">\n\t\t\t\t<img src={props.icon} style={imgStyle}/>\n\t\t\t</a>\n\t\t</div>\n\t)\n}\n\nconst circleStyle = {\n\twidth: \"26px\",\n\theight: \"26px\",\n\tpadding: \"6px\"\n}\n\nconst imgStyle = {\n\tdisplay: \"block\",\n\tmargin: \"auto\",\n\tmaxHeight: \"100%\",\n\tmaxWidth: \"100%\"\n}\n\nexport default CircleButton;","import React from 'react';\nimport CircleButton from './CircleButton';\nimport questionIcon from '../icons/icon-question.png';\nimport logo from '../icons/logoface-affinity-grey.png';\n\n\nfunction TopBar(props) {\n\treturn (\n\t\t<div class=\"pa3 flex justify-between\" style={styles}>\n\t\t\t<CircleButton icon={questionIcon}/>\n\t\t\t<img src={logo} style={logoStyles} className=\"tc pv2\" alt=\"logo\" />\n\t\t\t<CircleButton icon={questionIcon}/>\n\t\t</div>\n\t)\n}\n\nconst styles = {\n\theight: \"52px\"\n}\n\nconst logoStyles = {\n\twidth: \"50px\",\n\theight: \"17px\"\n}\n\nexport default TopBar;","import React from 'react';\n\nclass Header extends React.Component {\n\n    render()\n    {\n        return (\n            <div className = \"f7 avenir fl ttu tracked gray fw6 mv2\">\n                {this.props.text}\n            </div>\n        )\n    }\n    \n}\n\nHeader.defaultProps = \n{\n    text: \"Placeholder\"\n}\nexport default Header;","import React from 'react';\n\nclass Text extends React.Component {\n\n    render() {\n        return (\n            <div className=\"f6 avenir ttm dark-gray fw5 fn mv2\" style={styles}>\n                {this.props.text}\n            </div>\n        )\n    }\n}\n\nText.defaultProps = {\n    text: \"Placeholder\"\n}\n\nconst styles = {\n    whiteSpace: \"nowrap\"\n}\n\nexport default Text;","/* global chrome */\nimport React from 'react';\nimport Header from './Header.js';\nimport Text from './Text.js';\n\nclass ArticleInfo extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tcontent: \"\",\n\t\t\tauthor: \"\",\n\t\t\tpublisher: \"\"\n\t\t};\n\t}\n\n\tcomponentDidMount() {\n\t\tchrome.runtime.onMessage.addListener((message, sender, sendResponse) => {\n\t\t\tif (message.type === \"AFFINITY_ARTICLE_INFO\") {\n\t\t\t\tconst { author, content, publisher } = message;\n\t\t\t\tthis.setState({ author, content, publisher});\n\t\t\t}\n\t\t});\n\t}\n\n\trender() {\n\t\tconst { content, author, publisher } = this.state;\n\t\treturn (\n\t\t\t<div className=\"bg-white flex flex-column pa3 ph4\">\n\t\t\t\t<Header text=\"Title\" />\n\t\t\t\t<Text text={content} />\n\t\t\t\t<Header text=\"Author\" />\n\t\t\t\t<Text text={author} />\n\t\t\t\t<Header text=\"Publisher\" />\n\t\t\t\t<Text text={publisher} />\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default ArticleInfo;","import React from 'react';\n\nfunction FloatingIndicator(props) {\n\treturn (\n\t\t<div className=\"flex flex-column items-center\">\n\t\t\t<div style={boxStyle}>\n\t\t\t\t<p className=\"avenir ttu tracked fw5\" style={textStyle}>25% Right</p>\n\t\t\t</div>\n\t\t\t<div style={triangleStyle}></div>\n\t\t</div>\n\t)\n}\n\nconst textStyle = {\n\tfontSize: \"0.6rem\",\n\ttextAlign: \"center\"\n}\n\nconst boxStyle = {\n\twidth: \"75px\",\n\theight: \"20px\",\n\tbackground: \"gray\",\n\tborderRadius: \"1px\",\n\tdisplay: \"flex\",\n\tjustifyContent: \"center\",\n\talignItems: \"center\"\n}\n\nconst triangleStyle = {\n\twidth: \"0\",\n\theight: \"0\",\n\tborderLeft: \"5px solid transparent\",\n\tborderRight: \"5px solid transparent\",\n\tborderTop: \"6px solid gray\"\n}\n\nexport default FloatingIndicator;","import React from 'react';\nimport coloredScale from '../icons/coloredScale.png';\nimport FloatingIndicator from './FloatingIndicator';\n\nclass Rating extends React.Component {\n\trender() {\n\t\treturn (\n\t\t\t<div className=\"flex flex-column items-center justify-around\">\n\t\t\t\t<div className=\"ma4 br2 bg-white w-90\">\n\t\t\t\t\t<p className=\"ma2 baskerville f4 fw5 tc mid-gray\">\n\t\t\t\t\t\tSlightly Left-Leaning\n\t\t\t\t\t</p>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"mh3 mb3 f7 avenir fl ttu tracked fw5\">\n\t\t\t\t\t<div className=\"flex justify-between moon-gray\">\n\t\t\t\t\t\t<FloatingIndicator/>\n\t\t\t\t\t\t<p>100%</p>\n\t\t\t\t\t\t<p>0%</p>\n\t\t\t\t\t\t<p>100%</p>\n\t\t\t\t\t</div>\n\t\t\t\t\t<img src={coloredScale} alt=\"scale\" />\n\t\t\t\t\t<div className=\"flex justify-between gray\">\n\t\t\t\t\t\t<p>LEFT</p>\n\t\t\t\t\t\t<p>MODERATE</p>\n\t\t\t\t\t\t<p>RIGHT</p>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t)\n\t}\n}\n\nexport default Rating","import React from 'react';\nimport TopBar from './components/TopBar.js';\nimport ArticleInfo from './components/ArticleInfo.js';\nimport Rating from './components/Rating.js';\n\nfunction App() {\n  return (\n    <div className=\"App\" style={styles}>\n      <TopBar/>\n      <ArticleInfo/>\n      <Rating/>\n    </div>\n  );\n}\n\nconst styles = {\n  minWidth: \"314px\",\n  background: \"#F8F8F8\"\n}\n\n//components to add: buttons with image, headings, title, button for determination of left/right leaning\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}